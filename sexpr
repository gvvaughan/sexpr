#! /usr/bin/env lua

-- Read Eval Print Loop wrapper for lisp.lua.
--
-- Copyright (c) 2013-2014 Free Software Foundation, Inc.
-- Written by Gary V. Vaughan, 2013
--
-- This program is free software; you can redistribute it and/or modify it
-- under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 3, or (at your option)
-- any later version.
--
-- This program is distributed in the hope that it will be useful, but
-- WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-- General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program; see the file COPYING.  If not, write to the
-- Free Software Foundation, Fifth Floor, 51 Franklin Street, Boston,
-- MA 02111-1301, USA.


require "std.strict"

package.path = "lib/?.lua;" .. package.path

local primitive = require "sexpr.primitive"
local lisp = require "sexpr.lisp"



--[[ =========================== ]]--
--[[ Parse command line options. ]]--
--[[ =========================== ]]--


local OptionParser = require "std.optparse"
local parser = OptionParser [[
sexpr version 0
Written by Gary V. Vaughan <gary@gnu.org>, 2013

Copyright (C) 2014, Gary V. Vaughan
Sexpr comes with ABSOLUTELY NO WARRANTY.
You may redistribute copies of Sexpr under the terms of the GNU
General Public License; either version 3, or any later version.
For more information, see <http://gnu.org/licenses>.

Usage: sexpr [OPTION]... [FILE}...

A Lisp interpreter in Lua.

If no FILE is listed, go into the interactive REPL.

      --help            print this help, then exit
      --version         print version number, then exit

Report bugs to http://github.com/gvvaughan/sexpr/issues.]]

_G.arg, opts = parser:parse (_G.arg)


-- Treat remaining arguments as filenames to be evaluated by Sexpr.
for i = 1, #arg do
  local ok, errmsg = lisp.evalfile (arg[i])
  if not ok then
    errmsg = errmsg or "unknown error"
    io.stderr:write (arg[i] .. ": " .. errmsg .. ".\n")
    os.exit (1)
  end
end


-- Or zero args for REPL session.

local function REPL ()
  lisp.evalfile "lib/sexpr/init.lsp"

  local line
  repeat
    io.write ("> ")
    line = io.read ()
    if line and line ~= ":q" then
      local ok, value = pcall (lisp.evalstring, line)
      if ok then
        if value then
          print (tostring (value))
        end
      else
        print ("#error: " .. value)
      end
    end
  until not line or line == ":q"
end

if #arg == 0 then
  print [[
sexpr version 0  Copyright (C) 2014 Gary V. Vaughan"
enter ":q" to exit; "(describe 'symbol)" for SYMBOL docs]]
  REPL ()
end

os.exit (0)
