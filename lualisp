#! /usr/bin/env lua

-- Read Eval Print Loop wrapper for lisp.lua.
--
-- Copyright (c) 2013 Free Software Foundation, Inc.
-- Written by Gary V. Vaughan, 2013
--
-- This program is free software; you can redistribute it and/or modify it
-- under the terms of the GNU General Public License as published by
-- the Free Software Foundation; either version 3, or (at your option)
-- any later version.
--
-- This program is distributed in the hope that it will be useful, but
-- WITHOUT ANY WARRANTY; without even the implied warranty of
-- MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
-- General Public License for more details.
--
-- You should have received a copy of the GNU General Public License
-- along with this program; see the file COPYING.  If not, write to the
-- Free Software Foundation, Fifth Floor, 51 Franklin Street, Boston,
-- MA 02111-1301, USA.


require "strict" -- from lua-stdlib

local primitive = require "primitive"
local lisp = require "lisp"


local function REPL ()
  local env = primitive.symbols

  lisp.evalfile (env, "init.lsp")

  local line
  repeat
    io.write ("> ")
    line = io.read ()
    if line and line ~= ":q" then
      local ok, value = pcall (lisp.evalstring, env, line)
      if ok then
        if value then
          print (tostring (value))
        end
      else
        print ("#error: " .. value)
      end
    end
  until not line or line == ":q"
end

REPL ()

os.exit (0)
